import org.ajoberstar.grgit.Grgit

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'org.ajoberstar:grgit:1.5.0'
    }
}

apply plugin: 'application'

mainClassName = "org.jbake.launcher.Main"
applicationName = "jbake"

ext {
    examplesBase = "$project.buildDir/examples"

    exampleRepositories = [
            "example_project_freemarker": "git://github.com/jbake-org/jbake-example-project-freemarker.git",
            "example_project_groovy"    : "git://github.com/jbake-org/jbake-example-project-groovy.git",
            "example_project_thymeleaf" : "git://github.com/jbake-org/jbake-example-project-thymeleaf.git"
    ]
}

task cloneProjectExampleRepositories() {
    group = "distribution"
    description "Clone jbake example project repositories"

    outputs.dir examplesBase

    doLast {
        exampleRepositories.each { name, repository ->
            Grgit.clone(dir: "$examplesBase/$name", uri: repository)
        }
    }
}

//create Zip Task for each repository
exampleRepositories.each { name, repository ->

    task "zip${name}Repository"(type: Zip, dependsOn: cloneProjectExampleRepositories) {
        group "distribution"
        description "Zip $name repository"

        baseName = name
        archiveName = "${baseName}.zip"

        from "$examplesBase/$baseName"
        exclude 'README.md'
        exclude 'LICENSE'
        exclude '.git'
    }

}

startScripts {
    classpath += files("logging")
}

distributions {
    main {
        baseName = "jbake"
        contents {
            //Include Outputs from zip tasks
            exampleRepositories.each { name, repository ->
                def task = project.tasks.getByName("zip${name}Repository")
                from(task)
            }
        }
    }
}
